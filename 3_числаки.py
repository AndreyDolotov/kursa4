# -*- coding: utf-8 -*-
"""3 числаки.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OjBmsqtUHl5ft_l0iC_I2RkHhM96_vwQ
"""

import numpy as np
import matplotlib.pyplot as plt
x_list = []
y_i_list = []
sigma_list = []

# Чтение файла
with open('данные для мнк.txt', 'r', encoding='utf-8') as file:
    for line in file:
        # Пропуск пустых строк
        if not line.strip():
            continue
        # Разделение строки по табуляции и преобразование в float
        parts = line.strip().split('\t')
        if len(parts) == 3:
            x_list.append(float(parts[0]))
            y_i_list.append(float(parts[1]))
            sigma_list.append(float(parts[2]))
# Преобразование списков в массивы numpy
x = np.array(x_list)
y_i = np.array(y_i_list)
sigma = np.array(sigma_list)
alpha = np.zeros(3)
def r(alpha)  :
    r=np.zeros(len(x))
    for i in range(len(x)):
        r[i] = ((1+alpha[0]*x[i]+alpha[1]*x[i]**2)*np.exp(-alpha[2]*x[i])-y_i[i])/sigma[i]
    return r
def J(alpha)  :
    J=np.zeros((3, len(x)))
    for i in range(len(x)):
        J[0,i] = x[i]*np.exp(-alpha[2]*x[i])/sigma[i]
        J[1,i] = np.exp(-alpha[2]*x[i])*x[i]**2/sigma[i]
        J[2,i] = -x[i]*(1+alpha[0]*x[i]+alpha[1]*x[i]**2)*np.exp(-alpha[2]*x[i])/sigma[i]
    return J
eps=1e-10
alpha_0 = np.array([1.0, 1.0, 1.0])
for i in range(10000):
    r0=r(alpha_0)
    J0=J(alpha_0)
    deltaalpha = np.linalg.solve(J0 @ J0.T, -J0 @ r0)
    if  np.linalg.norm(deltaalpha) > 0.1 :
      deltaalpha=deltaalpha*0.1/np.linalg.norm(deltaalpha)
    alpha_0 += deltaalpha
    if np.linalg.norm(deltaalpha) < eps:
        break
print("Решение:", alpha_0)

x_fit = np.linspace(min(x), max(x), 300)
y_fit = (1 + alpha_0[0] * x_fit + alpha_0[1] * x_fit**2) * np.exp(-alpha_0[2] * x_fit)

# Создание графика
plt.figure(figsize=(10, 6))

# График подобранной функции
plt.plot(x_fit, y_fit, label=f'Fit: $(1 + {alpha_0[0]:.3f}x + {alpha_0[1]:.3f}x^2)e^{{-{alpha_0[2]:.3f}x}}$', color='red')

# Точки из данных с погрешностями
plt.errorbar(x, y_i, yerr=sigma, fmt='o', markersize=5, capsize=3, label='Данные с погрешностями', color='black')

# Настройки графика
plt.xlabel('x', fontsize=12)
plt.ylabel('y', fontsize=12)
plt.title('МНК-аппроксимация и экспериментальные точки', fontsize=14)