# -*- coding: utf-8 -*-
"""Курсач.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ouSSt6VuS1kGjpAbPJN52257bCKFDA2z
"""

import numpy as np
import time
from matplotlib import pyplot as plt
from matplotlib.animation import FuncAnimation
from numpy import zeros, linspace, pi, sin, cos, exp, sqrt
import matplotlib.pyplot as plt
import cmath
from matplotlib.pyplot import style, figure, axes
def u_init(x) :
  u_init = 1/(sqrt(4*pi))*exp(-x**2/4)
  return u_init
def u_left(t) :
  u_left = 0
  return u_left
def u_right(t) :
  u_right = 0
  return u_right
mass=0.01
w=0.1
def f(x):
  f = mass*w**2*x**2/2
  return f
a = -100; b = 100
t_0 = 1.; T = 5
g=0.01
p=1
N = 200; M = 20000
i=complex(0,1)
h = (b - a)/N; x = linspace(a,b,N+1)
tau = (T - t_0)/M; t = linspace(t_0,T,M+1)
u = np.zeros(((M + 1,N + 1)),dtype=complex)
for n in range(N + 1) :
  u[0,n] = u_init(x[n])
for m in range(1,M + 1) :
  u[m,0] = u_left(t[m])
  u[m,N] = u_right(t[m])
for m in range(M) :
  for n in range(1,N) :
    u[m + 1,n] = u[m,n] + tau/p/i*(-p**2*(u[m,n+1] - 2*u[m,n] + u[m,n-1])/(2*mass*h**2) +
g*abs(u[m,n])**2*u[m,n]+f(x[n])*u[m,n])
plt.ion()
fig = figure()
ax = axes(xlim=(a,b), ylim=(-1.,1.))
line, = ax.plot(x, u[0])
for m in range(0,1000,100):
  line.set_ydata(u[m])
  plt.draw()
  plt.gcf().canvas.flush_events()
  time.sleep(0.02)
plt.ioff()
plt.show()